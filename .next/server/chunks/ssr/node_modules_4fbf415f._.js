module.exports = {

"[project]/node_modules/imagekitio-next/dist/imagekit-next.esm.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "IKImage": (()=>IKImage),
    "IKUpload": (()=>IKUpload),
    "IKVideo": (()=>IKVideo),
    "ImageKitClient": (()=>ImageKit),
    "ImageKitContext": (()=>ImageKitContext),
    "ImageKitProvider": (()=>ImageKitProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/image.js [app-ssr] (ecmascript)");
;
;
function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function(obj) {
            return typeof obj;
        };
    } else {
        _typeof = function(obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
    }
    return _typeof(obj);
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _objectSpread2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
            ownKeys(Object(source), true).forEach(function(key) {
                _defineProperty(target, key, source[key]);
            });
        } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
            ownKeys(Object(source)).forEach(function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
        }
    }
    return target;
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function() {};
            return {
                s: F,
                n: function() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function(e) {
                    throw e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function() {
            it = o[Symbol.iterator]();
        },
        n: function() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function(e) {
            didErr = true;
            err = e;
        },
        f: function() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
var version = "3.0.2";
var errorMessages = {
    MANDATORY_INITIALIZATION_MISSING: {
        message: "Missing urlEndpoint during SDK initialization",
        help: ""
    },
    INVALID_TRANSFORMATION_POSITION: {
        message: "Invalid transformationPosition parameter",
        help: ""
    },
    PRIVATE_KEY_CLIENT_SIDE: {
        message: "privateKey should not be passed on the client side",
        help: ""
    },
    MISSING_UPLOAD_DATA: {
        message: "Missing data for upload",
        help: ""
    },
    MISSING_UPLOAD_FILE_PARAMETER: {
        message: "Missing file parameter for upload",
        help: ""
    },
    MISSING_UPLOAD_FILENAME_PARAMETER: {
        message: "Missing fileName parameter for upload",
        help: ""
    },
    MISSING_AUTHENTICATION_ENDPOINT: {
        message: "Missing authentication endpoint for upload",
        help: ""
    },
    MISSING_PUBLIC_KEY: {
        message: "Missing public key for upload",
        help: ""
    },
    AUTH_ENDPOINT_TIMEOUT: {
        message: "The authenticationEndpoint you provided timed out in 60 seconds",
        help: ""
    },
    AUTH_ENDPOINT_NETWORK_ERROR: {
        message: "Request to authenticationEndpoint failed due to network error",
        help: ""
    },
    AUTH_INVALID_RESPONSE: {
        message: "Invalid response from authenticationEndpoint. The SDK expects a JSON response with three fields i.e. signature, token and expire.",
        help: ""
    },
    UPLOAD_ENDPOINT_NETWORK_ERROR: {
        message: "Request to ImageKit upload endpoint failed due to network error",
        help: ""
    },
    INVALID_UPLOAD_OPTIONS: {
        message: "Invalid uploadOptions parameter",
        help: ""
    },
    MISSING_SIGNATURE: {
        message: "Missing signature for upload. The SDK expects token, signature and expire for authentication.",
        help: ""
    },
    MISSING_TOKEN: {
        message: "Missing token for upload. The SDK expects token, signature and expire for authentication.",
        help: ""
    },
    MISSING_EXPIRE: {
        message: "Missing expire for upload. The SDK expects token, signature and expire for authentication.",
        help: ""
    },
    INVALID_TRANSFORMATION: {
        message: "Invalid transformation parameter. Please include at least pre, post, or both.",
        help: ""
    },
    INVALID_PRE_TRANSFORMATION: {
        message: "Invalid pre transformation parameter.",
        help: ""
    },
    INVALID_POST_TRANSFORMATION: {
        message: "Invalid post transformation parameter.",
        help: ""
    }
};
function respond(isError, response, callback) {
    if (typeof callback == "function") {
        if (isError) {
            callback(response, null);
        } else {
            callback(null, response);
        }
    }
}
function getResponseHeaderMap(xhr) {
    var headers = {};
    var responseHeaders = xhr.getAllResponseHeaders();
    if (Object.keys(responseHeaders).length) {
        responseHeaders.trim().split(/[\r\n]+/).map(function(value) {
            return value.split(/: /);
        }).forEach(function(keyValue) {
            headers[keyValue[0].trim()] = keyValue[1].trim();
        });
    }
    return headers;
}
var addResponseHeadersAndBody = function addResponseHeadersAndBody(body, xhr) {
    var response = _objectSpread2({}, body);
    var responseMetadata = {
        statusCode: xhr.status,
        headers: getResponseHeaderMap(xhr)
    };
    Object.defineProperty(response, "$ResponseMetadata", {
        value: responseMetadata,
        enumerable: false,
        writable: false
    });
    return response;
};
var request = function request(uploadFileXHR, formData, callback) {
    uploadFile(uploadFileXHR, formData).then(function(result) {
        return respond(false, result, callback);
    }, function(ex) {
        return respond(true, ex, callback);
    });
};
var uploadFile = function uploadFile(uploadFileXHR, formData) {
    return new Promise(function(resolve, reject) {
        uploadFileXHR.open('POST', 'https://upload.imagekit.io/api/v1/files/upload');
        uploadFileXHR.onerror = function(e) {
            return reject(errorMessages.UPLOAD_ENDPOINT_NETWORK_ERROR);
        };
        uploadFileXHR.onload = function() {
            if (uploadFileXHR.status === 200) {
                try {
                    var body = JSON.parse(uploadFileXHR.responseText);
                    var uploadResponse = addResponseHeadersAndBody(body, uploadFileXHR);
                    return resolve(uploadResponse);
                } catch (ex) {
                    return reject(ex);
                }
            } else {
                try {
                    var body = JSON.parse(uploadFileXHR.responseText);
                    var uploadError = addResponseHeadersAndBody(body, uploadFileXHR);
                    return reject(uploadError);
                } catch (ex) {
                    return reject(ex);
                }
            }
        };
        uploadFileXHR.send(formData);
    });
};
var upload = function upload(xhr, uploadOptions, options, callback) {
    if (!uploadOptions.file) {
        respond(true, errorMessages.MISSING_UPLOAD_FILE_PARAMETER, callback);
        return;
    }
    if (!uploadOptions.fileName) {
        respond(true, errorMessages.MISSING_UPLOAD_FILENAME_PARAMETER, callback);
        return;
    }
    if (!options.publicKey) {
        respond(true, errorMessages.MISSING_PUBLIC_KEY, callback);
        return;
    }
    if (!uploadOptions.token) {
        respond(true, errorMessages.MISSING_TOKEN, callback);
        return;
    }
    if (!uploadOptions.signature) {
        respond(true, errorMessages.MISSING_SIGNATURE, callback);
        return;
    }
    if (!uploadOptions.expire) {
        respond(true, errorMessages.MISSING_EXPIRE, callback);
        return;
    }
    if (uploadOptions.transformation) {
        if (!(Object.keys(uploadOptions.transformation).includes("pre") || Object.keys(uploadOptions.transformation).includes("post"))) {
            respond(true, errorMessages.INVALID_TRANSFORMATION, callback);
            return;
        }
        if (Object.keys(uploadOptions.transformation).includes("pre") && !uploadOptions.transformation.pre) {
            respond(true, errorMessages.INVALID_PRE_TRANSFORMATION, callback);
            return;
        }
        if (Object.keys(uploadOptions.transformation).includes("post")) {
            if (Array.isArray(uploadOptions.transformation.post)) {
                var _iterator = _createForOfIteratorHelper(uploadOptions.transformation.post), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var transformation = _step.value;
                        if (transformation.type === "abs" && !(transformation.protocol || transformation.value)) {
                            respond(true, errorMessages.INVALID_POST_TRANSFORMATION, callback);
                            return;
                        } else if (transformation.type === "transformation" && !transformation.value) {
                            respond(true, errorMessages.INVALID_POST_TRANSFORMATION, callback);
                            return;
                        }
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
            } else {
                respond(true, errorMessages.INVALID_POST_TRANSFORMATION, callback);
                return;
            }
        }
    }
    var formData = new FormData();
    var key;
    for(key in uploadOptions){
        if (key) {
            if (key === "file" && typeof uploadOptions.file != "string") {
                formData.append('file', uploadOptions.file, String(uploadOptions.fileName));
            } else if (key === "tags" && Array.isArray(uploadOptions.tags)) {
                formData.append('tags', uploadOptions.tags.join(","));
            } else if (key === 'signature') {
                formData.append("signature", uploadOptions.signature);
            } else if (key === 'expire') {
                formData.append("expire", String(uploadOptions.expire));
            } else if (key === 'token') {
                formData.append("token", uploadOptions.token);
            } else if (key === "responseFields" && Array.isArray(uploadOptions.responseFields)) {
                formData.append('responseFields', uploadOptions.responseFields.join(","));
            } else if (key === "extensions" && Array.isArray(uploadOptions.extensions)) {
                formData.append('extensions', JSON.stringify(uploadOptions.extensions));
            } else if (key === "customMetadata" && _typeof(uploadOptions.customMetadata) === "object" && !Array.isArray(uploadOptions.customMetadata) && uploadOptions.customMetadata !== null) {
                formData.append('customMetadata', JSON.stringify(uploadOptions.customMetadata));
            } else if (key === "transformation" && _typeof(uploadOptions.transformation) === "object" && uploadOptions.transformation !== null) {
                formData.append(key, JSON.stringify(uploadOptions.transformation));
            } else if (key === 'checks' && uploadOptions.checks) {
                formData.append("checks", uploadOptions.checks);
            } else if (uploadOptions[key] !== undefined) {
                formData.append(key, String(uploadOptions[key]));
            }
        }
    }
    formData.append("publicKey", options.publicKey);
    request(xhr, formData, callback);
};
var supportedTransforms = {
    width: "w",
    height: "h",
    aspectRatio: "ar",
    quality: "q",
    crop: "c",
    cropMode: "cm",
    focus: "fo",
    x: "x",
    y: "y",
    format: "f",
    radius: "r",
    background: "bg",
    border: "b",
    rotation: "rt",
    rotate: "rt",
    blur: "bl",
    named: "n",
    progressive: "pr",
    lossless: "lo",
    trim: "t",
    metadata: "md",
    colorProfile: "cp",
    defaultImage: "di",
    dpr: "dpr",
    effectSharpen: "e-sharpen",
    effectUSM: "e-usm",
    effectContrast: "e-contrast",
    effectGray: "e-grayscale",
    original: "orig",
    effectShadow: "e-shadow",
    effectGradient: "e-gradient",
    raw: "raw"
};
var DEFAULT_TRANSFORMATION_POSITION = "path";
var QUERY_TRANSFORMATION_POSITION = "query";
var VALID_TRANSFORMATION_POSITIONS = [
    DEFAULT_TRANSFORMATION_POSITION,
    QUERY_TRANSFORMATION_POSITION
];
var CHAIN_TRANSFORM_DELIMITER = ":";
var TRANSFORM_DELIMITER = ",";
var TRANSFORM_KEY_VALUE_DELIMITER = "-";
var transformationUtils = {
    getDefault: function getDefault() {
        return DEFAULT_TRANSFORMATION_POSITION;
    },
    addAsQueryParameter: function addAsQueryParameter(options) {
        return options.transformationPosition === QUERY_TRANSFORMATION_POSITION;
    },
    validParameters: function validParameters(options) {
        if (typeof options.transformationPosition == "undefined") return false;
        return VALID_TRANSFORMATION_POSITIONS.indexOf(options.transformationPosition) != -1;
    },
    getTransformKey: function getTransformKey(transform) {
        if (!transform) {
            return "";
        }
        return supportedTransforms[transform] || supportedTransforms[transform.toLowerCase()] || "";
    },
    getChainTransformDelimiter: function getChainTransformDelimiter() {
        return CHAIN_TRANSFORM_DELIMITER;
    },
    getTransformDelimiter: function getTransformDelimiter() {
        return TRANSFORM_DELIMITER;
    },
    getTransformKeyValueDelimiter: function getTransformKeyValueDelimiter() {
        return TRANSFORM_KEY_VALUE_DELIMITER;
    }
};
var TRANSFORMATION_PARAMETER = "tr";
function removeTrailingSlash(str) {
    if (typeof str == "string" && str[str.length - 1] == "/") {
        str = str.substring(0, str.length - 1);
    }
    return str;
}
function removeLeadingSlash(str) {
    if (typeof str == "string" && str[0] == "/") {
        str = str.slice(1);
    }
    return str;
}
function pathJoin(parts, sep) {
    var separator = sep || "/";
    var replace = new RegExp(separator + "{1,}", "g");
    return parts.join(separator).replace(replace, separator);
}
var buildURL = function buildURL(opts) {
    if (!opts.path && !opts.src) {
        return "";
    }
    var urlObj, isSrcParameterUsedForURL, urlEndpointPattern;
    try {
        if (opts.path) {
            urlEndpointPattern = new URL(opts.urlEndpoint).pathname;
            urlObj = new URL(pathJoin([
                opts.urlEndpoint.replace(urlEndpointPattern, ""),
                opts.path
            ]));
        } else {
            urlObj = new URL(opts.src);
            isSrcParameterUsedForURL = true;
        }
    } catch (e) {
        console.error(e);
        return "";
    }
    for(var i in opts.queryParameters){
        urlObj.searchParams.append(i, String(opts.queryParameters[i]));
    }
    var transformationString = constructTransformationString(opts.transformation);
    if (transformationString && transformationString.length) {
        if (transformationUtils.addAsQueryParameter(opts) || isSrcParameterUsedForURL) {
            urlObj.searchParams.append(TRANSFORMATION_PARAMETER, transformationString);
        } else {
            urlObj.pathname = pathJoin([
                TRANSFORMATION_PARAMETER + transformationUtils.getChainTransformDelimiter() + transformationString,
                urlObj.pathname
            ]);
        }
    }
    if (urlEndpointPattern) {
        urlObj.pathname = pathJoin([
            urlEndpointPattern,
            urlObj.pathname
        ]);
    } else {
        urlObj.pathname = pathJoin([
            urlObj.pathname
        ]);
    }
    return urlObj.href;
};
function constructTransformationString(transformation) {
    if (!Array.isArray(transformation)) {
        return "";
    }
    var parsedTransforms = [];
    for(var i = 0, l = transformation.length; i < l; i++){
        var parsedTransformStep = [];
        for(var key in transformation[i]){
            if (transformation[i][key] === undefined || transformation[i][key] === null) continue;
            var transformKey = transformationUtils.getTransformKey(key);
            if (!transformKey) {
                transformKey = key;
            }
            if (transformation[i][key] === "-") {
                parsedTransformStep.push(transformKey);
            } else if (key === "raw") {
                parsedTransformStep.push(transformation[i][key]);
            } else {
                var value = transformation[i][key];
                if (transformKey === "di") {
                    value = removeTrailingSlash(removeLeadingSlash(value || ""));
                    value = value.replace(/\//g, "@@");
                }
                parsedTransformStep.push([
                    transformKey,
                    value
                ].join(transformationUtils.getTransformKeyValueDelimiter()));
            }
        }
        parsedTransforms.push(parsedTransformStep.join(transformationUtils.getTransformDelimiter()));
    }
    return parsedTransforms.join(transformationUtils.getChainTransformDelimiter());
}
var url = function url(urlOpts, defaultOptions) {
    return buildURL(_objectSpread2(_objectSpread2({}, defaultOptions), urlOpts));
};
function mandatoryParametersAvailable(options) {
    return options.urlEndpoint;
}
var promisify = function promisify(thisContext, fn) {
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (args.length === fn.length && typeof args[args.length - 1] !== "undefined") {
            if (typeof args[args.length - 1] !== "function") {
                throw new Error("Callback must be a function.");
            }
            fn.call.apply(fn, [
                thisContext
            ].concat(args));
        } else {
            return new Promise(function(resolve, reject) {
                var callback = function callback(err) {
                    if (err) {
                        return reject(err);
                    } else {
                        for(var _len2 = arguments.length, results = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){
                            results[_key2 - 1] = arguments[_key2];
                        }
                        resolve(results.length > 1 ? results : results[0]);
                    }
                };
                args.pop();
                args.push(callback);
                fn.call.apply(fn, [
                    thisContext
                ].concat(args));
            });
        }
    };
};
var ImageKit = function() {
    function ImageKit(opts) {
        _classCallCheck(this, ImageKit);
        _defineProperty(this, "options", {
            sdkVersion: "javascript-".concat(version),
            publicKey: "",
            urlEndpoint: "",
            transformationPosition: transformationUtils.getDefault()
        });
        this.options = _objectSpread2(_objectSpread2({}, this.options), opts || {});
        if (!mandatoryParametersAvailable(this.options)) {
            throw errorMessages.MANDATORY_INITIALIZATION_MISSING;
        }
        if (!transformationUtils.validParameters(this.options)) {
            throw errorMessages.INVALID_TRANSFORMATION_POSITION;
        }
    }
    _createClass(ImageKit, [
        {
            key: "url",
            value: function url$1(urlOptions) {
                return url(urlOptions, this.options);
            }
        },
        {
            key: "upload",
            value: function upload$1(uploadOptions, callbackOrOptions, options) {
                var callback;
                if (typeof callbackOrOptions === 'function') {
                    callback = callbackOrOptions;
                } else {
                    options = callbackOrOptions || {};
                }
                if (!uploadOptions || _typeof(uploadOptions) !== "object") {
                    return respond(true, errorMessages.INVALID_UPLOAD_OPTIONS, callback);
                }
                var mergedOptions = _objectSpread2(_objectSpread2({}, this.options), options);
                var _ref = uploadOptions || {}, userProvidedXHR = _ref.xhr;
                delete uploadOptions.xhr;
                var xhr = userProvidedXHR || new XMLHttpRequest();
                return promisify(this, upload)(xhr, uploadOptions, mergedOptions, callback);
            }
        }
    ]);
    return ImageKit;
}();
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
// Create the context
const ImageKitContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createContext"])({});
/**
 * Provides a container for ImageKit components. Any option set in ImageKitProvider will be passed to the children.
 *
 * @example
 *<ImageKitProvider  publicKey="<public key>" urlEndpoint="url link">
 *    <!-- other tags -->
 *    <Image src={link}/>
 *</ImageKitProvider>
 */ const ImageKitProvider = (props)=>{
    const extractContextOptions = (mergedOptions)=>{
        const propKeys = [
            "publicKey",
            "urlEndpoint",
            "authenticator",
            "transformationPosition",
            "ikClient"
        ];
        for(const key in mergedOptions){
            if (!propKeys.includes(key)) {
                delete mergedOptions[key];
            }
        }
        return mergedOptions;
    };
    const mergedOptions = Object.assign({}, props);
    const contextOptionsExtracted = extractContextOptions(mergedOptions);
    if (contextOptionsExtracted.urlEndpoint && contextOptionsExtracted.urlEndpoint.trim() !== "") {
        contextOptionsExtracted.ikClient = new ImageKit({
            urlEndpoint: contextOptionsExtracted.urlEndpoint,
            // @ts-ignore
            sdkVersion: ""
        });
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(ImageKitContext.Provider, {
        value: contextOptionsExtracted
    }, props.children);
};
const useImageKitComponent = (props)=>{
    const contextOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useContext"])(ImageKitContext);
    const getIKClient = ()=>{
        if (contextOptions && contextOptions.ikClient) {
            return contextOptions.ikClient;
        }
        let { urlEndpoint } = props;
        urlEndpoint = urlEndpoint || contextOptions && contextOptions.urlEndpoint;
        if (!urlEndpoint || urlEndpoint.trim() === "") {
            throw new Error("Missing urlEndpoint during initialization");
        }
        const ikClient = new ImageKit({
            urlEndpoint: urlEndpoint,
            // @ts-ignore
            sdkVersion: ""
        });
        return ikClient;
    };
    return {
        getIKClient
    };
};
const fetchEffectiveConnection = ()=>{
    try {
        return navigator.connection.effectiveType;
    } catch (ex) {
        return "4g";
    }
};
const getSrc = ({ urlEndpoint, lqip, src, path, transformation, transformationPosition, queryParameters }, ikClient, contextOptions)=>{
    let options;
    if (src) {
        options = {
            urlEndpoint: urlEndpoint || contextOptions.urlEndpoint,
            src,
            transformation: transformation || undefined,
            transformationPosition: transformationPosition || contextOptions.transformationPosition || undefined,
            queryParameters: queryParameters || {}
        };
    } else if (path) {
        options = {
            urlEndpoint: urlEndpoint || contextOptions.urlEndpoint,
            path,
            transformation: transformation || undefined,
            transformationPosition: transformationPosition || contextOptions.transformationPosition || undefined,
            queryParameters: queryParameters || {}
        };
    } else return {
        originalSrc: ""
    };
    const result = {
        originalSrc: ikClient.url(options)
    };
    if (lqip && lqip.active) {
        var quality = Math.round(lqip.quality || lqip.threshold || 20);
        var blur = Math.round(lqip.blur || 6);
        var newTransformation = options.transformation ? [
            ...options.transformation
        ] : [];
        if (lqip.raw && typeof lqip.raw === "string" && lqip.raw.trim() !== "") {
            newTransformation.push({
                raw: lqip.raw.trim()
            });
        } else {
            newTransformation.push({
                quality: String(quality),
                blur: String(blur)
            });
        }
        result.lqipSrc = ikClient.url(Object.assign(Object.assign({}, options), {
            transformation: newTransformation
        }));
    }
    return result;
};
const getIKElementsUrl = ({ lqip = null, loading }, { intersected, originalSrcLoaded, originalSrc, lqipSrc })=>{
    /*
      No lazy loading no lqip
        src=originalImage
      No lazy loading lqip
        src=lqip
        src=originalImage (when loaded)
      lazy loading and no lqip
        src=''
        onIntersect:
        src=originalImage
      lazy loading and lqip
        src=lqip
        onIntersect:
        src=originalImage (when loaded)
    */ const isLqipActive = (lqip)=>lqip && lqip.active;
    if (loading !== "lazy" && !isLqipActive(lqip)) {
        return originalSrc;
    } else if (loading !== "lazy" && isLqipActive(lqip)) {
        if (originalSrcLoaded) {
            return originalSrc;
        } else {
            return lqipSrc;
        }
    } else if (loading === "lazy" && !isLqipActive(lqip)) {
        if (intersected) {
            return originalSrc;
        } else {
            return "";
        }
    } else {
        if (intersected && originalSrcLoaded) {
            return originalSrc;
        } else {
            return lqipSrc;
        }
    }
};
function hasProperty(array, property) {
    return array.some((obj)=>obj.hasOwnProperty(property));
}
const updateTransformation = ({ width, height, transformation, src, path, quality })=>{
    //if height and width are there in props and absent in transformation then add it to the transformatiion
    if ((src || path) && (width || quality || height)) {
        let transformationObject = {};
        if (!((transformation === null || transformation === void 0 ? void 0 : transformation.length) && (hasProperty(transformation, "height") || hasProperty(transformation, "width")))) {
            if (height) transformationObject["height"] = String(height);
            if (width) transformationObject["width"] = String(width);
        }
        if (!((transformation === null || transformation === void 0 ? void 0 : transformation.length) && hasProperty(transformation, "quality")) && quality) transformationObject["quality"] = String(quality);
        if (Object.keys(transformationObject).length) {
            if (transformation === null || transformation === void 0 ? void 0 : transformation.length) transformation = [
                ...transformation,
                transformationObject
            ];
            else transformation = [
                transformationObject
            ];
        }
    }
    return transformation;
};
const IKImage = (props)=>{
    const [currentUrl, setCurrentUrl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(undefined);
    const [imageProps, setImageProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({});
    const [originalSrc, setOriginalSrc] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("");
    const [lqipSrc, setLqipSrc] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("");
    const [originalSrcLoaded, setOriginalSrcLoaded] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [observe, setObserve] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(undefined);
    const [initialized, setInitialized] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [intersected, setIntersected] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const imageRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const { getIKClient } = useImageKitComponent(Object.assign({}, props));
    const contextOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useContext"])(ImageKitContext);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const { originalSrc: newOriginalSrc, lqipSrc: newLqipSrc } = getSrc(Object.assign(Object.assign({}, props), {
            transformation: updateTransformation(props)
        }), getIKClient(), contextOptions);
        setOriginalSrc(newOriginalSrc);
        setLqipSrc(newLqipSrc ? newLqipSrc : "");
        setInitialized(true);
    }, [
        contextOptions,
        props
    ]);
    const updateImageUrl = ()=>__awaiter(void 0, void 0, void 0, function*() {
            const url = yield getIKElementsUrl(props, {
                originalSrc,
                lqipSrc,
                intersected,
                contextOptions,
                initialzeState: initialized,
                originalSrcLoaded,
                observe
            }); // Include intersected state
            if (url) {
                setCurrentUrl(url);
            }
        });
    const triggerOriginalImageLoad = ()=>{
        var img = new Image();
        img.onload = ()=>{
            setOriginalSrcLoaded(true);
        };
        img.src = originalSrc;
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (originalSrcLoaded) updateImageUrl();
    }, [
        originalSrcLoaded
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const image = imageRef.current;
        const { loading } = props;
        if (initialized) {
            if (window && "IntersectionObserver" in window && loading === "lazy" && lqip) {
                const connectionType = fetchEffectiveConnection();
                let rootMargin = "1250px";
                if (connectionType !== "4g") rootMargin = "2500px";
                const imageObserver = new IntersectionObserver((entries)=>{
                    const el = entries[0];
                    if (el && el.isIntersecting && !intersected) {
                        setIntersected(true);
                        setObserve((prevObserver)=>{
                            if (prevObserver) {
                                prevObserver.disconnect();
                            }
                            return undefined;
                        });
                        triggerOriginalImageLoad();
                        updateImageUrl();
                    }
                }, {
                    rootMargin: `${rootMargin} 0px ${rootMargin} 0px`
                });
                if (image) {
                    imageObserver.observe(image);
                    setObserve(imageObserver);
                }
            } else {
                setIntersected(true);
                triggerOriginalImageLoad();
                updateImageUrl();
            }
        }
        return ()=>{
            if (observe) {
                observe.disconnect();
            }
        };
    }, [
        props,
        originalSrc,
        lqipSrc
    ]);
    const { urlEndpoint, authenticator, publicKey, loading, lqip, path, src, transformation, transformationPosition, queryParameters, alt } = props, restProps = __rest(props, [
        "urlEndpoint",
        "authenticator",
        "publicKey",
        "loading",
        "lqip",
        "path",
        "src",
        "transformation",
        "transformationPosition",
        "queryParameters",
        "alt"
    ]);
    const restPropsWithoutImageProps = __rest(restProps, [
        "fill",
        "quality",
        "priority",
        "placeholder",
        "blurDataURL",
        "unoptimized",
        "overrideSrc",
        "onLoadingComplete",
        "layout",
        "objectFit",
        "objectPosition",
        "lazyBoundary",
        "lazyRoot"
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        // if height and width are there in transformation skip props height and width and add fill =true
        const updatedRestProps = restProps;
        if ((transformation === null || transformation === void 0 ? void 0 : transformation.length) && transformation.some((obj)=>obj.hasOwnProperty("height") || obj.hasOwnProperty("width"))) {
            if (updatedRestProps.height) delete updatedRestProps["height"];
            if (updatedRestProps.width) delete updatedRestProps["width"];
            updatedRestProps["fill"] = true;
        }
        setImageProps(updatedRestProps);
    }, []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (lqip === null || lqip === void 0 ? void 0 : lqip.active) console.warn("In [imagekitio-next], loading is set to eager when LQIP is used.");
    }, [
        lqip
    ]);
    return currentUrl != undefined && Object.keys(imageProps).length ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"], Object.assign({
        loader: ({ src })=>src,
        alt: alt,
        src: currentUrl ? currentUrl : "",
        ref: imageRef,
        unoptimized: true,
        loading: (lqip === null || lqip === void 0 ? void 0 : lqip.active) ? "eager" : loading
    }, imageProps)) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("img", Object.assign({
        src: currentUrl ? currentUrl : undefined,
        ref: imageRef
    }, restPropsWithoutImageProps));
};
const IKUpload = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])((props, ref)=>{
    const [state, setState] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({});
    const contextOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useContext"])(ImageKitContext);
    const { getIKClient } = useImageKitComponent(Object.assign({}, props));
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const abort = ()=>{
            if (state.xhr) {
                state.xhr.abort();
            }
        };
        if (ref && typeof ref === "object" && ref.hasOwnProperty("current")) {
            const refObject = ref;
            refObject.current.abort = abort;
        }
    }, [
        state.xhr,
        ref
    ]);
    const { publicKey, urlEndpoint, authenticator, fileName, useUniqueFileName, tags, folder, isPrivateFile, customCoordinates, responseFields, onError, onSuccess, onUploadStart, onUploadProgress, validateFile, webhookUrl, overwriteFile, overwriteAITags, overwriteTags, overwriteCustomMetadata, extensions, customMetadata, transformation, overrideParameters, checks } = props, restProps = __rest(props, [
        "publicKey",
        "urlEndpoint",
        "authenticator",
        "fileName",
        "useUniqueFileName",
        "tags",
        "folder",
        "isPrivateFile",
        "customCoordinates",
        "responseFields",
        "onError",
        "onSuccess",
        "onUploadStart",
        "onUploadProgress",
        "validateFile",
        "webhookUrl",
        "overwriteFile",
        "overwriteAITags",
        "overwriteTags",
        "overwriteCustomMetadata",
        "extensions",
        "customMetadata",
        "transformation",
        "overrideParameters",
        "checks"
    ]);
    const uploadFile = (e)=>{
        var _a;
        const publicKey = props.publicKey || contextOptions.publicKey;
        const authenticator = props.authenticator || contextOptions.authenticator;
        const urlEndpoint = props.urlEndpoint || contextOptions.urlEndpoint;
        if (!publicKey || publicKey.trim() === "") {
            if (onError && typeof onError === "function") {
                onError({
                    message: "Missing publicKey"
                });
            }
            return;
        }
        if (!authenticator) {
            if (onError && typeof onError === "function") {
                onError({
                    message: "The authenticator function is not provided."
                });
            }
            return;
        }
        if (typeof authenticator !== "function") {
            if (onError && typeof onError === "function") {
                onError({
                    message: "The provided authenticator is not a function."
                });
            }
            return;
        }
        if (!urlEndpoint || urlEndpoint.trim() === "") {
            if (onError && typeof onError === "function") {
                onError({
                    message: "Missing urlEndpoint"
                });
            }
            return;
        }
        var ikClient = getIKClient();
        const file = (_a = e.target.files) === null || _a === void 0 ? void 0 : _a[0];
        if (!file) {
            return;
        }
        if (props.validateFile && !props.validateFile(file)) {
            return;
        }
        if (props.onUploadStart && typeof props.onUploadStart === "function") {
            props.onUploadStart(e);
        }
        let overrideValues = {};
        if (props.overrideParameters && typeof props.overrideParameters === "function") {
            overrideValues = props.overrideParameters(file) || {};
        }
        const xhr = new XMLHttpRequest();
        const progressCb = (e)=>{
            if (props.onUploadProgress && typeof props.onUploadProgress === "function") {
                props.onUploadProgress(e);
            }
        };
        xhr.upload.addEventListener("progress", progressCb);
        var params = {
            file: file,
            fileName: overrideValues.fileName || fileName || file.name,
            useUniqueFileName: overrideValues.useUniqueFileName || useUniqueFileName,
            tags: overrideValues.tags || tags,
            folder: overrideValues.folder || folder,
            isPrivateFile: overrideValues.isPrivateFile || isPrivateFile,
            customCoordinates: overrideValues.customCoordinates || customCoordinates,
            responseFields,
            extensions: overrideValues.extensions || extensions,
            webhookUrl: overrideValues.webhookUrl || webhookUrl,
            overwriteFile: overrideValues.overwriteFile || overwriteFile,
            overwriteAITags: overrideValues.overwriteAITags || overwriteAITags,
            overwriteTags: overrideValues.overwriteTags || overwriteTags,
            overwriteCustomMetadata: overrideValues.overwriteCustomMetadata || overwriteCustomMetadata,
            customMetadata: overrideValues.customMetadata || customMetadata,
            signature: "",
            expire: 0,
            token: "",
            xhr,
            transformation: overrideValues.transformation || transformation,
            checks: overrideValues.checks || checks
        };
        const authPromise = authenticator();
        if (!(authPromise instanceof Promise)) {
            if (onError && typeof onError === "function") {
                onError({
                    message: "The authenticator function is expected to return a Promise instance."
                });
            }
            return;
        }
        authPromise.then(({ signature, token, expire })=>{
            params["signature"] = signature;
            params["expire"] = expire;
            params["token"] = token;
            ikClient.upload(params, (err, result)=>{
                if (err) {
                    if (onError && typeof onError === "function") {
                        onError(err);
                    }
                } else {
                    if (onSuccess && typeof onSuccess === "function") {
                        onSuccess(result);
                    }
                }
                xhr.upload.removeEventListener("progress", progressCb);
            }, {
                publicKey
            });
            setState({
                xhr
            });
        }).catch((data)=>{
            var error;
            if (data instanceof Array) {
                error = data[0];
            } else {
                error = data;
            }
            if (onError && typeof onError === "function") {
                onError({
                    message: String(error)
                });
            }
            return;
        });
    };
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("input", Object.assign({}, restProps, {
        ref: ref,
        type: "file",
        onChange: (e)=>{
            if (props.onChange && typeof props.onChange === "function") {
                props.onChange(e);
            }
            uploadFile(e);
        }
    }));
});
const IKVideo = (props)=>{
    const videoRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [state, setState] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])({
        currentUrl: "",
        contextOptions: {}
    });
    const { getIKClient } = useImageKitComponent(Object.assign({}, props));
    const contextItems = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useContext"])(ImageKitContext);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const { originalSrc } = getSrc(props, getIKClient(), contextItems);
        setState((prevState)=>Object.assign(Object.assign({}, prevState), {
                currentUrl: originalSrc,
                contextOptions: contextItems
            }));
    }, [
        contextItems,
        props
    ]);
    const { currentUrl } = state;
    const restProps = __rest(props, [
        "urlEndpoint",
        "publicKey",
        "authenticator",
        "path",
        "src",
        "transformation",
        "transformationPosition",
        "queryParameters"
    ]);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("video", Object.assign({}, restProps, {
        ref: videoRef,
        key: currentUrl
    }), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].createElement("source", {
        src: currentUrl || undefined,
        type: "video/mp4"
    }));
};
;
 //# sourceMappingURL=imagekit-next.esm.js.map
}}),
"[project]/node_modules/@swc/helpers/cjs/_class_private_field_loose_base.cjs [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _class_private_field_loose_base(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
        throw new TypeError("attempted to use private field on non-instance");
    }
    return receiver;
}
exports._ = _class_private_field_loose_base;
}}),
"[project]/node_modules/@swc/helpers/cjs/_class_private_field_loose_key.cjs [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var id = 0;
function _class_private_field_loose_key(name) {
    return "__private_" + id++ + "_" + name;
}
exports._ = _class_private_field_loose_key;
}}),
"[project]/node_modules/@swc/helpers/cjs/_tagged_template_literal_loose.cjs [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
function _tagged_template_literal_loose(strings, raw) {
    if (!raw) raw = strings.slice(0);
    strings.raw = raw;
    return strings;
}
exports._ = _tagged_template_literal_loose;
}}),
"[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.507.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "hasA11yProp": (()=>hasA11yProp),
    "mergeClasses": (()=>mergeClasses),
    "toCamelCase": (()=>toCamelCase),
    "toKebabCase": (()=>toKebabCase),
    "toPascalCase": (()=>toPascalCase)
});
const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const toCamelCase = (string)=>string.replace(/^([A-Z])|[\s-_]+(\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());
const toPascalCase = (string)=>{
    const camelCase = toCamelCase(string);
    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);
};
const mergeClasses = (...classes)=>classes.filter((className, index, array)=>{
        return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index;
    }).join(" ").trim();
const hasA11yProp = (props)=>{
    for(const prop in props){
        if (prop.startsWith("aria-") || prop === "role" || prop === "title") {
            return true;
        }
    }
};
;
 //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/defaultAttributes.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.507.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>defaultAttributes)
});
var defaultAttributes = {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round"
};
;
 //# sourceMappingURL=defaultAttributes.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/Icon.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.507.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>Icon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$defaultAttributes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/defaultAttributes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)");
;
;
;
const Icon = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])(({ color = "currentColor", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = "", children, iconNode, ...rest }, ref)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])("svg", {
        ref,
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$defaultAttributes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mergeClasses"])("lucide", className),
        ...!children && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasA11yProp"])(rest) && {
            "aria-hidden": "true"
        },
        ...rest
    }, [
        ...iconNode.map(([tag, attrs])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])(tag, attrs)),
        ...Array.isArray(children) ? children : [
            children
        ]
    ]));
;
 //# sourceMappingURL=Icon.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/createLucideIcon.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.507.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "default": (()=>createLucideIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/shared/src/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$Icon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/Icon.js [app-ssr] (ecmascript)");
;
;
;
const createLucideIcon = (iconName, iconNode)=>{
    const Component = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])(({ className, ...props }, ref)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createElement"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$Icon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"], {
            ref,
            iconNode,
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mergeClasses"])(`lucide-${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKebabCase"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toPascalCase"])(iconName))}`, `lucide-${iconName}`, className),
            ...props
        }));
    Component.displayName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$shared$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toPascalCase"])(iconName);
    return Component;
};
;
 //# sourceMappingURL=createLucideIcon.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/icons/eye.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @license lucide-react v0.507.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ __turbopack_context__.s({
    "__iconNode": (()=>__iconNode),
    "default": (()=>Eye)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/createLucideIcon.js [app-ssr] (ecmascript)");
;
const __iconNode = [
    [
        "path",
        {
            d: "M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",
            key: "1nclc0"
        }
    ],
    [
        "circle",
        {
            cx: "12",
            cy: "12",
            r: "3",
            key: "1v7zrd"
        }
    ]
];
const Eye = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$createLucideIcon$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("eye", __iconNode);
;
 //# sourceMappingURL=eye.js.map
}}),
"[project]/node_modules/lucide-react/dist/esm/icons/eye.js [app-ssr] (ecmascript) <export default as Eye>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Eye": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$eye$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$eye$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/eye.js [app-ssr] (ecmascript)");
}}),

};

//# sourceMappingURL=node_modules_4fbf415f._.js.map
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\n// Global variable to store the connection\nlet cached = global.mongoose;\n\nif (!cached) {\n    cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDb() {\n    if (cached.conn) {\n        return; \n    }\n\n    if (!cached.promise) {\n        const options = {\n            bufferCommands: true,\n            maxPoolSIze: 10\n        }\n        cached.promise = mongoose.connect(process.env.MONGODB_URI as string, options)\n            .then((mongoose) => {\n                return mongoose.connection;\n            });\n    }\n\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n\n    return cached.conn;\n}\n\nexport default connectDb;"],"names":[],"mappings":";;;AAAA;;AAEA,0CAA0C;AAC1C,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb;IACJ;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,UAAU;YACZ,gBAAgB;YAChB,aAAa;QACjB;QACA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAY,SAChE,IAAI,CAAC,CAAC;YACH,OAAO,SAAS,UAAU;QAC9B;IACR;IAEA,IAAI;QACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACtC,EAAE,OAAO,GAAG;QACR,OAAO,OAAO,GAAG;QACjB,MAAM;IACV;IAEA,OAAO,OAAO,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/models/order.model.ts"],"sourcesContent":["import mongoose, { Document, Model } from \"mongoose\";\nimport { ImageVariant } from \"./product.model\";\n\ninterface PopulatedUser {\n    _id: mongoose.Types.ObjectId;\n    email: string;\n}\n\ninterface PopulatedProduct {\n    _id: mongoose.Types.ObjectId;\n    name: string;\n    imageUrl: string;\n}\n\nexport interface IOrder extends Document {\n    userId: mongoose.Types.ObjectId | PopulatedUser;\n    productId: mongoose.Types.ObjectId | PopulatedProduct;\n    variant: ImageVariant;\n\n    razorpayOrderId: string;\n    razorpayPaymentId?: string;\n    amount: number;\n    status: \"pending\" | \"completed\" | \"failed\";\n    downloadUrl?: string;\n    previewUrl?: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\nconst orderSchema = new mongoose.Schema<IOrder>({\n    userId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n    },\n    productId: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"Product\"\n    },\n    variant: {\n        type: {\n            type: String,\n            required: true,\n            enum: [\"SQUARE\", \"WIDE\", \"POTRAIT\"]\n        },\n        price: {\n            type: Number,\n            required: true,\n            min: 0\n\n        },\n        lisence: {\n            type: String,\n            enum: [\"personal\", \"commercial\"]\n        }\n    },\n    razorpayOrderId: {\n        type: String,\n        required: true\n    },\n    razorpayPaymentId: {\n        type: String,\n        required: false\n    },\n    amount: {\n        type: Number,\n        required: true,\n        min: 0\n    },\n    status: {\n        type: String,\n        required: true,\n        enum: [\"pending\", \"completed\", \"failed\"],\n        default: \"pending\"\n    },\n    downloadUrl: {\n        type: String\n    },\n    previewUrl: String\n}, { timestamps: true })\n\nconst Order: Model<IOrder> = mongoose.models['Order'] ? mongoose.models['Order'] : mongoose.model<IOrder>('Order', orderSchema);\n\nexport default Order;"],"names":[],"mappings":";;;AAAA;;AA6BA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAS;IAC5C,QAAQ;QACJ,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACT;IACA,WAAW;QACP,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACT;IACA,SAAS;QACL,MAAM;YACF,MAAM;YACN,UAAU;YACV,MAAM;gBAAC;gBAAU;gBAAQ;aAAU;QACvC;QACA,OAAO;YACH,MAAM;YACN,UAAU;YACV,KAAK;QAET;QACA,SAAS;YACL,MAAM;YACN,MAAM;gBAAC;gBAAY;aAAa;QACpC;IACJ;IACA,iBAAiB;QACb,MAAM;QACN,UAAU;IACd;IACA,mBAAmB;QACf,MAAM;QACN,UAAU;IACd;IACA,QAAQ;QACJ,MAAM;QACN,UAAU;QACV,KAAK;IACT;IACA,QAAQ;QACJ,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAW;YAAa;SAAS;QACxC,SAAS;IACb;IACA,aAAa;QACT,MAAM;IACV;IACA,YAAY;AAChB,GAAG;IAAE,YAAY;AAAK;AAEtB,MAAM,QAAuB,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,GAAG,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAS,SAAS;uCAEpG","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/app/api/webhook/razorpay/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport crypto from \"crypto\"\nimport connectDb from \"@/lib/db\";\nimport Order from \"@/models/order.model\";\nimport nodemailer from \"nodemailer\";\n\n\nexport const POST = async (req: NextRequest) => {\n    try {\n        const body = await req.text();\n        const signature = req.headers.get(\"x-razorpay-signature\");\n\n        const expectedSignature = crypto\n            .createHmac(\"sha256\", process.env.razorpay_secret as string)\n            .update(body)\n            .digest('hex');\n\n        if (signature !== expectedSignature) {\n            return NextResponse.json({\n                error: \"Invalid signature\"\n            }, { status: 400 })\n        }\n        //all this above done to check that this is a valid request done by the legit razorpay\n\n        const event = JSON.parse(body);\n        await connectDb();\n\n        //handling 1 event\n        if (event.event === \"payment.captured\") {\n            const payment = event.payload.payment.entity\n            const order = await Order.findOneAndUpdate({\n                razorpayOrderId: payment.order_id\n            }, {\n                razorpayPaymentId: payment.id,\n                status: \"completed\"\n            }).populate([\n                { path: \"productId\", select: \"name\" },\n                { path: \"userId\", select: \"email\" }\n            ])\n\n            if (order) {\n                const transporter = nodemailer.createTransport({\n                    service: \"sandbox.smtp.mailtrap.io\",\n                    port: 2525,\n                    auth: {\n                        user: process.env.mailtrap_username,\n                        pass: process.env.mailtrap_password\n                    }\n                })\n\n                await transporter.sendMail({\n                    from: \"hiaayush30@gmail.com\",\n                    to: (order.userId as {email:string}).email,\n                    subject: \"Order completed\",\n                    text: `Your order ${(order.productId as {name:string}).name} has been successfully placed`\n                })\n\n                return NextResponse.json({\n                    message: \"success\"\n                })\n            }\n        }\n    } catch (error) {\n        console.log(error);\n        return NextResponse.json({\n            error: \"Something went wrong\"\n        }, { status: 500 })\n    }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAGO,MAAM,OAAO,OAAO;IACvB,IAAI;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC;QAElC,MAAM,oBAAoB,qGAAA,CAAA,UAAM,CAC3B,UAAU,CAAC,UAAU,QAAQ,GAAG,CAAC,eAAe,EAChD,MAAM,CAAC,MACP,MAAM,CAAC;QAEZ,IAAI,cAAc,mBAAmB;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACrB,OAAO;YACX,GAAG;gBAAE,QAAQ;YAAI;QACrB;QACA,sFAAsF;QAEtF,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QAEd,kBAAkB;QAClB,IAAI,MAAM,KAAK,KAAK,oBAAoB;YACpC,MAAM,UAAU,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM;YAC5C,MAAM,QAAQ,MAAM,iIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;gBACvC,iBAAiB,QAAQ,QAAQ;YACrC,GAAG;gBACC,mBAAmB,QAAQ,EAAE;gBAC7B,QAAQ;YACZ,GAAG,QAAQ,CAAC;gBACR;oBAAE,MAAM;oBAAa,QAAQ;gBAAO;gBACpC;oBAAE,MAAM;oBAAU,QAAQ;gBAAQ;aACrC;YAED,IAAI,OAAO;gBACP,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;oBAC3C,SAAS;oBACT,MAAM;oBACN,MAAM;wBACF,MAAM,QAAQ,GAAG,CAAC,iBAAiB;wBACnC,MAAM,QAAQ,GAAG,CAAC,iBAAiB;oBACvC;gBACJ;gBAEA,MAAM,YAAY,QAAQ,CAAC;oBACvB,MAAM;oBACN,IAAI,AAAC,MAAM,MAAM,CAAoB,KAAK;oBAC1C,SAAS;oBACT,MAAM,CAAC,WAAW,EAAE,AAAC,MAAM,SAAS,CAAmB,IAAI,CAAC,6BAA6B,CAAC;gBAC9F;gBAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACrB,SAAS;gBACb;YACJ;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACrB,OAAO;QACX,GAAG;YAAE,QAAQ;QAAI;IACrB;AACJ","debugId":null}}]
}
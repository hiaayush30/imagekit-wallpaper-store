{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/app/api/upload-auth/route.ts"],"sourcesContent":["// File: app/api/upload-auth/route.ts\nimport { getUploadAuthParams } from \"@imagekit/next/server\"\n\nexport async function GET() {\n    // Your application logic to authenticate the user\n    // For example, you can check if the user is logged in or has the necessary permissions\n    // If the user is not authenticated, you can return an error response\n\n    const { token, expire, signature } = getUploadAuthParams({\n        privateKey: process.env.IMAGEKIT_PRIVATE_KEY as string, // Never expose this on client side\n        publicKey: process.env.IMAGEKIT_PUBLIC_KEY as string,\n        // expire: 30 * 60, // Optional, controls the expiry time of the token in seconds, maximum 1 hour in the future\n        // token: \"random-token\", // Optional, a unique token for request\n    })\n\n    return Response.json({ token, expire, signature, publicKey: process.env.IMAGEKIT_PUBLIC_KEY })\n}"],"names":[],"mappings":"AAAA,qCAAqC;;;;AACrC;;AAEO,eAAe;IAClB,kDAAkD;IAClD,uFAAuF;IACvF,qEAAqE;IAErE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,sBAAmB,AAAD,EAAE;QACrD,YAAY,QAAQ,GAAG,CAAC,oBAAoB;QAC5C,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAG9C;IAEA,OAAO,SAAS,IAAI,CAAC;QAAE;QAAO;QAAQ;QAAW,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAAC;AAChG","debugId":null}}]
}
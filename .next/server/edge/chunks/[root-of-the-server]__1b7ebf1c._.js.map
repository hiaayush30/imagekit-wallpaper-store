{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// import { withAuth } from \"next-auth/middleware\"\n// import { NextResponse } from \"next/server\"\n\n// export default withAuth(\n//     // `withAuth` augments your `Request` with the user's token.\n//     function middleware(req) {\n//         console.log(req.nextauth.token)\n//         return NextResponse.next();\n//     },\n//     {\n//         callbacks: {\n//             authorized: ({ token, req }) => {\n//                 const { pathname } = req.nextUrl\n\n//                 //allow auth related routes\n//                 if (\n//                     pathname.startsWith(\"/api/auth\") ||\n//                     pathname.startsWith(\"/login\") ||\n//                     pathname.startsWith(\"/register\")\n//                 ) {\n//                     return true;\n//                 }\n\n//                 //public routes\n//                 if (\n//                     pathname === \"/\" ||\n//                     pathname.startsWith(\"/api/products\") ||\n//                     pathname.startsWith(\"/products\")\n//                 ) {\n//                     return true\n//                 }\n\n//                 //admin routes require admin role\n//                 if (\n//                     pathname.startsWith(\"/admin\")\n//                 ) {\n//                     return token?.role === \"admin\"\n//                 }\n\n//                 //all other routes require authentication\n//                 return token ? true : false\n//             },\n//         },\n//     },\n// )\n\n// export const config = {\n//     matcher: [\n//         // match all routed paths except static files,image optimization files/favicon files and public folder\n//         \"/((?!_next/static|_next/image|favicon.ico|public/).*)\"\n//     ]\n// }\n\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { getToken } from 'next-auth/jwt';\n\nexport { default } from 'next-auth/middleware';\n\nexport async function middleware(request: NextRequest) {\n    const token = await getToken({ req: request, secret: process.env.NEXTAUTH_SECRET });\n    const url = request.nextUrl; //url that user is requesting for\n\n    // console.log(\"Token:\", token);\n\n    if (token) {\n        if (\n            url.pathname.startsWith('/login') ||\n            url.pathname.startsWith('/signup')\n        ) {\n            return NextResponse.redirect(new URL('/dashboard', request.url));\n        }\n    } else if (!token) {\n        if (url.pathname.startsWith('/dashboard')) {\n            return NextResponse.redirect(new URL('/', request.url));\n        }\n    }\n\n    return NextResponse.next(); // Continue as normal\n}\n\n// Apply middleware only to these routes\nexport const config = {\n    matcher: ['/dashboard/:path*', '/login', '/signup','/dashboard'],\n};"],"names":[],"mappings":"AAAA,kDAAkD;AAClD,6CAA6C;AAE7C,2BAA2B;AAC3B,mEAAmE;AACnE,iCAAiC;AACjC,0CAA0C;AAC1C,sCAAsC;AACtC,SAAS;AACT,QAAQ;AACR,uBAAuB;AACvB,gDAAgD;AAChD,mDAAmD;AAEnD,8CAA8C;AAC9C,uBAAuB;AACvB,0DAA0D;AAC1D,uDAAuD;AACvD,uDAAuD;AACvD,sBAAsB;AACtB,mCAAmC;AACnC,oBAAoB;AAEpB,kCAAkC;AAClC,uBAAuB;AACvB,0CAA0C;AAC1C,8DAA8D;AAC9D,uDAAuD;AACvD,sBAAsB;AACtB,kCAAkC;AAClC,oBAAoB;AAEpB,oDAAoD;AACpD,uBAAuB;AACvB,oDAAoD;AACpD,sBAAsB;AACtB,qDAAqD;AACrD,oBAAoB;AAEpB,4DAA4D;AAC5D,8CAA8C;AAC9C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,IAAI;AAEJ,0BAA0B;AAC1B,iBAAiB;AACjB,iHAAiH;AACjH,kEAAkE;AAClE,QAAQ;AACR,IAAI;;;;;AAEJ;AAAA;AAEA;AAEA;;;;AAEO,eAAe,WAAW,OAAoB;IACjD,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,KAAK;QAAS,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAAC;IACjF,MAAM,MAAM,QAAQ,OAAO,EAAE,iCAAiC;IAE9D,gCAAgC;IAEhC,IAAI,OAAO;QACP,IACI,IAAI,QAAQ,CAAC,UAAU,CAAC,aACxB,IAAI,QAAQ,CAAC,UAAU,CAAC,YAC1B;YACE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;QAClE;IACJ,OAAO,IAAI,CAAC,OAAO;QACf,IAAI,IAAI,QAAQ,CAAC,UAAU,CAAC,eAAe;YACvC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;QACzD;IACJ;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,IAAI,qBAAqB;AACrD;AAGO,MAAM,SAAS;IAClB,SAAS;QAAC;QAAqB;QAAU;QAAU;KAAa;AACpE"}}]
}
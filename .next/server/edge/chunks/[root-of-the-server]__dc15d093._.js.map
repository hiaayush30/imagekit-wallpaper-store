{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { withAuth } from \"next-auth/middleware\"\nimport { NextResponse } from \"next/server\"\n\nexport default withAuth(\n    // `withAuth` augments your `Request` with the user's token.\n    function middleware(req) {\n        console.log(req.nextauth.token)\n        return NextResponse.next();\n    },\n    {\n        callbacks: {\n            authorized: ({ token, req }) => {\n                const { pathname } = req.nextUrl\n\n                //allow webhook\n                if (pathname.startsWith(\"/api/webhook\")) {\n                    return true;\n                }\n\n                //allow auth related routes\n                if (\n                    pathname.startsWith(\"/api/auth\") ||\n                    pathname.startsWith(\"/login\") ||\n                    pathname.startsWith(\"/register\")\n                ) {\n                    return true;\n                }\n\n                //public routes\n                if (\n                    pathname === \"/\" ||\n                    pathname.startsWith(\"/api/products\") ||\n                    pathname.startsWith(\"/products\")\n                ) {\n                    return true\n                }\n\n                //admin routes require admin role\n                if (\n                    pathname.startsWith(\"/admin\")\n                ) {\n                    return token?.role === \"admin\"\n                }\n\n                //all other routes require authentication\n                return token ? true : false\n            },\n        },\n    },\n)\n\nexport const config = {\n    matcher: [\n        // match all routed paths except static files,image optimization files/favicon files and public folder\n        \"/((?!_next/static|_next/image|favicon.ico|public/).*)\"\n    ]\n}\n\n//or\n\n// import { NextResponse } from 'next/server';\n// import type { NextRequest } from 'next/server';\n// import { getToken } from 'next-auth/jwt';\n\n// export { default } from 'next-auth/middleware';\n\n// export async function middleware(request: NextRequest) {\n//     const token = await getToken({ req: request, secret: process.env.NEXTAUTH_SECRET });\n//     const url = request.nextUrl; //url that user is requesting for\n\n//     // console.log(\"Token:\", token);\n\n//     if (token) {\n//         if(token?.role !== \"admin\"){\n//             if(\n//                 url.pathname.startsWith(\"/admin\") ||\n//                 url.pathname.startsWith(\"/api/admin\")\n//             ){\n//                 return NextResponse.redirect(new URL(\"/dashboard\",request.nextUrl))\n//             }\n//         }\n//         if (\n//             url.pathname.startsWith('/login') ||\n//             url.pathname.startsWith('/signup')\n//         ) {\n//             return NextResponse.redirect(new URL('/dashboard', request.url));\n//         }\n//     } else if (!token) {\n//         if (url.pathname.startsWith('/dashboard')) {\n//             return NextResponse.redirect(new URL('/', request.url));\n//         }\n//     }\n\n//     return NextResponse.next(); // Continue as normal\n// }\n\n// // Apply middleware only to these routes\n// export const config = {\n//     matcher: ['/dashboard/:path*', '/login', '/signup','/dashboard'],\n// };"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;uCAEe,CAAA,GAAA,kJAAA,CAAA,WAAQ,AAAD,EAClB,4DAA4D;AAC5D,SAAS,WAAW,GAAG;IACnB,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,KAAK;IAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC5B,GACA;IACI,WAAW;QACP,YAAY,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;YACvB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;YAEhC,eAAe;YACf,IAAI,SAAS,UAAU,CAAC,iBAAiB;gBACrC,OAAO;YACX;YAEA,2BAA2B;YAC3B,IACI,SAAS,UAAU,CAAC,gBACpB,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,cACtB;gBACE,OAAO;YACX;YAEA,eAAe;YACf,IACI,aAAa,OACb,SAAS,UAAU,CAAC,oBACpB,SAAS,UAAU,CAAC,cACtB;gBACE,OAAO;YACX;YAEA,iCAAiC;YACjC,IACI,SAAS,UAAU,CAAC,WACtB;gBACE,OAAO,OAAO,SAAS;YAC3B;YAEA,yCAAyC;YACzC,OAAO,QAAQ,OAAO;QAC1B;IACJ;AACJ;AAGG,MAAM,SAAS;IAClB,SAAS;QACL,sGAAsG;QACtG;KACH;AACL,EAEA,IAAI;CAEJ,8CAA8C;CAC9C,kDAAkD;CAClD,4CAA4C;CAE5C,kDAAkD;CAElD,2DAA2D;CAC3D,2FAA2F;CAC3F,qEAAqE;CAErE,uCAAuC;CAEvC,mBAAmB;CACnB,uCAAuC;CACvC,kBAAkB;CAClB,uDAAuD;CACvD,wDAAwD;CACxD,iBAAiB;CACjB,sFAAsF;CACtF,gBAAgB;CAChB,YAAY;CACZ,eAAe;CACf,mDAAmD;CACnD,iDAAiD;CACjD,cAAc;CACd,gFAAgF;CAChF,YAAY;CACZ,2BAA2B;CAC3B,uDAAuD;CACvD,uEAAuE;CACvE,YAAY;CACZ,QAAQ;CAER,wDAAwD;CACxD,IAAI;CAEJ,2CAA2C;CAC3C,0BAA0B;CAC1B,wEAAwE;CACxE,KAAK"}}]
}
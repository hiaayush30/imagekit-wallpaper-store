{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/components/RazorpayPayment.tsx"],"sourcesContent":["\"use client\"\nimport Script from 'next/script';\nimport React, { useState } from 'react';\n\nconst RazorpayPayment = () => {\n    const [amount, setAmount] = useState('');\n\n    const handleAmountChange = (event) => {\n        setAmount(event.target.value);\n    };\n\n    const payNow = async () => {\n        if (!amount) {\n            alert('Please enter the amount.');\n            return;\n        }\n\n        try {\n            // Create order by calling the server endpoint\n            const response = await fetch('/api/orders', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    amount: parseFloat(amount) * 100, // Convert to paise\n                    // currency: 'INR',\n                    // receipt: 'receipt#1',\n                    productId: \"6820fbe5a27ccf66c205008b\",\n                    variant: {\n                        price: amount,\n                        type:\"POTRAIT\",\n                        lisence:\"personal\"\n                    },\n                    notes: {},\n                }),\n            });\n            console.log(response)\n            const order = await response.json();\n            console.log(\"ye rha order\",order)\n\n            if (order && order.orderId) {\n                const options = {\n                    key: process.env.NEXT_PUBLIC_razorpay_id, // Use environment variable for key_id\n                    amount: order.amount, // Amount from the backend order\n                    currency: order.currency,\n                    name: 'Your Company Name',\n                    description: 'Secure Payment',\n                    order_id: order.orderId, // Use the order ID from the backend\n                    callback_url: `${window.location.origin}/dashboard?success=true`, // Use dynamic success URL\n                    prefill: {\n                        name: '', // You can prefill user details if available\n                        email: '',\n                        contact: '',\n                    },\n                    theme: {\n                        color: '#3366FF',\n                    },\n                    handler: async function (response) {\n                        // Verify the payment signature on the server\n                        const verificationResponse = await fetch('/api/webhook/razorpay', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                razorpay_order_id: response.razorpay_order_id,\n                                razorpay_payment_id: response.razorpay_payment_id,\n                                razorpay_signature: response.razorpay_signature,\n                            }),\n                        });\n\n                        const verificationData = await verificationResponse.json();\n\n                        if (verificationData.success) {\n                            alert('Payment successful! Order ID: ' + response.razorpay_order_id);\n                            // Redirect to a success page or update UI\n                            window.location.href = `/payment-success?order_id=${response.razorpay_order_id}&payment_id=${response.razorpay_payment_id}`;\n                        } else {\n                            alert('Payment failed: ' + verificationData.error);\n                            // Handle payment failure\n                        }\n                    },\n                };\n\n                const rzp = new window.Razorpay(options);\n                rzp.open();\n            } else {\n                alert('Failed to create order.');\n            }\n        } catch (error) {\n            console.error('Error creating order:', error);\n            alert('An error occurred while processing your request.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Razorpay Payment Gateway Integration</h1>\n            <form id=\"payment-form\">\n                <label htmlFor=\"amount\">Amount:</label>\n                <input\n                    type=\"number\"\n                    id=\"amount\"\n                    name=\"amount\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                    required\n                />\n                <button type=\"button\" onClick={payNow}>\n                    Pay Now\n                </button>\n            </form>\n            <Script src=\"https://checkout.razorpay.com/v1/checkout.js\"></Script>\n        </div>\n    );\n};\n\nexport default RazorpayPayment;"],"names":[],"mappings":";;;AA2CyB;;AA1CzB;AACA;;;AAFA;;;AAIA,MAAM,kBAAkB;;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,qBAAqB,CAAC;QACxB,UAAU,MAAM,MAAM,CAAC,KAAK;IAChC;IAEA,MAAM,SAAS;QACX,IAAI,CAAC,QAAQ;YACT,MAAM;YACN;QACJ;QAEA,IAAI;YACA,8CAA8C;YAC9C,MAAM,WAAW,MAAM,MAAM,eAAe;gBACxC,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB,QAAQ,WAAW,UAAU;oBAC7B,mBAAmB;oBACnB,wBAAwB;oBACxB,WAAW;oBACX,SAAS;wBACL,OAAO;wBACP,MAAK;wBACL,SAAQ;oBACZ;oBACA,OAAO,CAAC;gBACZ;YACJ;YACA,QAAQ,GAAG,CAAC;YACZ,MAAM,QAAQ,MAAM,SAAS,IAAI;YACjC,QAAQ,GAAG,CAAC,gBAAe;YAE3B,IAAI,SAAS,MAAM,OAAO,EAAE;gBACxB,MAAM,UAAU;oBACZ,GAAG;oBACH,QAAQ,MAAM,MAAM;oBACpB,UAAU,MAAM,QAAQ;oBACxB,MAAM;oBACN,aAAa;oBACb,UAAU,MAAM,OAAO;oBACvB,cAAc,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,uBAAuB,CAAC;oBAChE,SAAS;wBACL,MAAM;wBACN,OAAO;wBACP,SAAS;oBACb;oBACA,OAAO;wBACH,OAAO;oBACX;oBACA,SAAS,eAAgB,QAAQ;wBAC7B,6CAA6C;wBAC7C,MAAM,uBAAuB,MAAM,MAAM,yBAAyB;4BAC9D,QAAQ;4BACR,SAAS;gCACL,gBAAgB;4BACpB;4BACA,MAAM,KAAK,SAAS,CAAC;gCACjB,mBAAmB,SAAS,iBAAiB;gCAC7C,qBAAqB,SAAS,mBAAmB;gCACjD,oBAAoB,SAAS,kBAAkB;4BACnD;wBACJ;wBAEA,MAAM,mBAAmB,MAAM,qBAAqB,IAAI;wBAExD,IAAI,iBAAiB,OAAO,EAAE;4BAC1B,MAAM,mCAAmC,SAAS,iBAAiB;4BACnE,0CAA0C;4BAC1C,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,0BAA0B,EAAE,SAAS,iBAAiB,CAAC,YAAY,EAAE,SAAS,mBAAmB,EAAE;wBAC/H,OAAO;4BACH,MAAM,qBAAqB,iBAAiB,KAAK;wBACjD,yBAAyB;wBAC7B;oBACJ;gBACJ;gBAEA,MAAM,MAAM,IAAI,OAAO,QAAQ,CAAC;gBAChC,IAAI,IAAI;YACZ,OAAO;gBACH,MAAM;YACV;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACV;IACJ;IAEA,qBACI,6LAAC;;0BACG,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAK,IAAG;;kCACL,6LAAC;wBAAM,SAAQ;kCAAS;;;;;;kCACxB,6LAAC;wBACG,MAAK;wBACL,IAAG;wBACH,MAAK;wBACL,OAAO;wBACP,UAAU;wBACV,QAAQ;;;;;;kCAEZ,6LAAC;wBAAO,MAAK;wBAAS,SAAS;kCAAQ;;;;;;;;;;;;0BAI3C,6LAAC,iIAAA,CAAA,UAAM;gBAAC,KAAI;;;;;;;;;;;;AAGxB;GAhHM;KAAA;uCAkHS","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/components/uploadFile.tsx"],"sourcesContent":["\"use client\" // This component must be a client component\n\nimport {\n    ImageKitAbortError,\n    ImageKitInvalidRequestError,\n    ImageKitServerError,\n    ImageKitUploadNetworkError,\n    upload,\n} from \"@imagekit/next\";\nimport { useRef, useState } from \"react\";\nimport { Button } from \"./ui/button\";\nimport { File } from \"lucide-react\";\nimport { toast } from \"sonner\";\nimport { useRouter } from \"next/navigation\";\n\n// UploadExample component demonstrates file uploading using ImageKit's Next.js SDK.\nconst UploadFile = () => {\n    const router = useRouter();\n    // State to keep track of the current upload progress (percentage)\n    const [progress, setProgress] = useState(0);\n\n    // Create a ref for the file input element to access its files easily\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // Create an AbortController instance to provide an option to cancel the upload if needed.\n    const abortController = new AbortController();\n\n    /**\n     * Authenticates and retrieves the necessary upload credentials from the server.\n     *\n     * This function calls the authentication API endpoint to receive upload parameters like signature,\n     * expire time, token, and publicKey.\n     *\n     * @returns {Promise<{signature: string, expire: string, token: string, publicKey: string}>} The authentication parameters.\n     * @throws {Error} Throws an error if the authentication request fails.\n     */\n    const authenticator = async () => {\n        try {\n            // Perform the request to the upload authentication endpoint.\n            const response = await fetch(\"/api/upload-auth\");\n            if (!response.ok) {\n                // If the server response is not successful, extract the error text for debugging.\n                const errorText = await response.text();\n                throw new Error(`Request failed with status ${response.status}: ${errorText}`);\n            }\n\n            // Parse and destructure the response JSON for upload credentials.\n            const data = await response.json();\n            const { signature, expire, token, publicKey } = data;\n            return { signature, expire, token, publicKey };\n        } catch (error) {\n            // Log the original error for debugging before rethrowing a new error.\n            console.error(\"Authentication error:\", error);\n            throw new Error(\"Authentication request failed\");\n        }\n    };\n\n    /**\n     * Handles the file upload process.\n     *\n     * This function:\n     * - Validates file selection.\n     * - Retrieves upload authentication credentials.\n     * - Initiates the file upload via the ImageKit SDK.\n     * - Updates the upload progress.\n     * - Catches and processes errors accordingly.\n     */\n    const handleUpload = async () => {\n        // Access the file input element using the ref\n        const fileInput = fileInputRef.current;\n        if (!fileInput || !fileInput.files || fileInput.files.length === 0) {\n            toast(\"Please select a file to upload\");\n            return;\n        }\n\n        // Extract the first file from the file input\n        const file = fileInput.files[0];\n        const allowedImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n        if(!allowedImageTypes.includes(file.type)){\n            return toast(\"file should be an image type\")\n        }\n\n        if(file.size > 5 * 1024 * 1024){\n            return toast(\"File size cannot exceed 5 MB\")\n        }\n\n        // Retrieve authentication parameters for the upload.\n        let authParams;\n        try {\n            authParams = await authenticator();\n        } catch (authError) {\n            console.error(\"Failed to authenticate for upload:\", authError);\n            router.push('/login')\n            return;\n        }\n        const { signature, expire, token, publicKey } = authParams;\n\n        // Call the ImageKit SDK upload function with the required parameters and callbacks.\n        try {\n            const uploadResponse = await upload({\n                // Authentication parameters\n                expire,\n                token,\n                signature,\n                publicKey,\n                file,\n                fileName: file.name, // Optionally set a custom file name\n                // Progress callback to update upload progress state\n                onProgress: (event) => {\n                    setProgress((event.loaded / event.total) * 100);\n                },\n                // Abort signal to allow cancellation of the upload if needed.\n                abortSignal: abortController.signal,\n            });\n            console.log(\"Upload response:\", uploadResponse);\n        } catch (error) {\n            // Handle specific error types provided by the ImageKit SDK.\n            if (error instanceof ImageKitAbortError) {\n                console.error(\"Upload aborted:\", error.reason);\n            } else if (error instanceof ImageKitInvalidRequestError) {\n                console.error(\"Invalid request:\", error.message);\n            } else if (error instanceof ImageKitUploadNetworkError) {\n                console.error(\"Network error:\", error.message);\n            } else if (error instanceof ImageKitServerError) {\n                console.error(\"Server error:\", error.message);\n            } else {\n                // Handle any other errors that may occur.\n                console.error(\"Upload error:\", error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"bg-stone-200 p-3 rounded-lg\">\n            {/* File input element using React ref */}\n            <File className=\"p-1 mx-2 w-6 h-6\" />\n            <input className=\"p-1 m-2 rounded-lg hover:cursor-pointer hover:font-semibold border-2 border-black border-dashed\"\n                type=\"file\" ref={fileInputRef} />\n            {/* Button to trigger the upload process */}\n            <Button type=\"button\" onClick={handleUpload} className=\"hover:cursor-pointer\">\n                Upload file\n            </Button>\n            <br />\n            {/* Display the current upload progress */}\n            <div className=\"m-2 p-1 flex items-center gap-3\">\n                <span>Upload progress: </span>\n                <progress value={progress} max={100}></progress>\n            </div>\n        </div>\n    );\n};\n\nexport default UploadFile;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\nimport RazorpayPayment from '@/components/RazorpayPayment'\nimport UploadFile from '@/components/uploadFile'\nimport React from 'react'\n\nfunction page() {\n  return (\n    <div>\n      Dashboard page\n      <div className='flex items-center justify-center py-10 text-stone-800'>\n        <UploadFile />\n      </div>\n      <div>\n        <RazorpayPayment/>\n      </div>\n    </div>\n  )\n}\n\nexport default page\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAKA,SAAS;IACP,qBACE,6LAAC;;YAAI;0BAEH,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;;;;;;;;;;0BAEb,6LAAC;0BACC,cAAA,6LAAC,wIAAA,CAAA,UAAe;;;;;;;;;;;;;;;;AAIxB;uCAEe","debugId":null}}]
}
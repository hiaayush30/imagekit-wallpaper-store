{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\n// Global variable to store the connection\nlet cached = global.mongoose;\n\nif (!cached) {\n    cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function connectDb() {\n    if (cached.conn) {\n        return; \n    }\n\n    if (!cached.promise) {\n        const options = {\n            bufferCommands: true,\n            maxPoolSIze: 10\n        }\n        cached.promise = mongoose.connect(process.env.MONGODB_URI as string, options)\n            .then((mongoose) => {\n                return mongoose.connection;\n            });\n    }\n\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n\n    return cached.conn;\n}\n\nexport default connectDb;"],"names":[],"mappings":";;;AAmB0C;AAnB1C;;AAEA,0CAA0C;AAC1C,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IACX,IAAI,OAAO,IAAI,EAAE;QACb;IACJ;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,UAAU;YACZ,gBAAgB;YAChB,aAAa;QACjB;QACA,OAAO,OAAO,GAAG,qJAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,WAAW,EAAY,SAChE,IAAI,CAAC,CAAC;YACH,OAAO,SAAS,UAAU;QAC9B;IACR;IAEA,IAAI;QACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACtC,EAAE,OAAO,GAAG;QACR,OAAO,OAAO,GAAG;QACjB,MAAM;IACV;IAEA,OAAO,OAAO,IAAI;AACtB;uCAEe","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/models/product.model.ts"],"sourcesContent":["import mongoose, { Model } from \"mongoose\";\n\nimport connectDb from \"@/lib/db\";\n\n// In MongoDB, and therefore in Mongoose, you have the flexibility to embed related data directly within a document instead of\n// always relying on separate collections and joins (like in traditional relational databases). Nested schemas allow you to define\n// the structure of these embedded documents.\n\n\n\nexport const IMAGE_VARIANTS = {\n    SQUARE: {\n        type: \"SQUARE\",\n        dimensions: { width: 1200, height: 1200 },\n        label: \"Square (1:1)\",\n        aspectRatio: \"1:1\"\n    },\n    WIDE: {\n        type: \"WIDE\",\n        dimensions: { width: 1920, height: 1080 },\n        label: \"Widescreen (16:9)\",\n        aspectRatio: \"16:9\"\n    },\n    POTRAIT: {\n        type: \"POTRAIT\",\n        dimensions: { width: 1080, height: 1440 },\n        label: \"Potrait (3:4)\",\n        aspectRatio: \"3:4\"\n    }\n}\n\nexport type imageVariantType = keyof typeof IMAGE_VARIANTS;\n// The keyof operator in TypeScript takes a type and produces a union type of its property names (keys).\n// imageVariantType is a type that can only be one of the string literals: \"SQUARE\" | \"WIDE\" | \"POTRAIT\".\n\nexport interface ImageVariant {\n    type: imageVariantType;\n    price: number;\n    lisence: \"personal\" | \"commercial\"\n}\n\nexport interface IProduct {\n    _id?: mongoose.Types.ObjectId;\n    name: string;\n    description: string;\n    imageUrl: string;\n    variants: ImageVariant[]\n}\n\nconst imageVariantSchema = new mongoose.Schema({\n    type: {\n        type: String,\n        enum: [\"SQUARE\", \"WIDE\", \"POTRAIT\"],\n        required: true\n    },\n    price: {\n        type: Number,\n        min: 0\n    },\n    lisence: {\n        type: String,\n        enum: [\"personal\", \"commercial\"]\n    }\n}, { timestamps: true })\n\nconst productSchema = new mongoose.Schema<IProduct>({\n    name: {\n        type: String,\n        required: true\n    },\n    description: {\n        type: String,\n        required: true\n    },\n    imageUrl: {\n        type: String,\n        required: true\n    },\n    variants: [imageVariantSchema]\n}, { timestamps: true })\n\n(async () => await connectDb())();\nconst Product: Model<IProduct> = mongoose.models['Product'] ? mongoose.models['Product'] : mongoose.model<IProduct>('Product', productSchema);\n\nexport default Product;"],"names":[],"mappings":";;;;AAAA;AAEA;;;AAQO,MAAM,iBAAiB;IAC1B,QAAQ;QACJ,MAAM;QACN,YAAY;YAAE,OAAO;YAAM,QAAQ;QAAK;QACxC,OAAO;QACP,aAAa;IACjB;IACA,MAAM;QACF,MAAM;QACN,YAAY;YAAE,OAAO;YAAM,QAAQ;QAAK;QACxC,OAAO;QACP,aAAa;IACjB;IACA,SAAS;QACL,MAAM;QACN,YAAY;YAAE,OAAO;YAAM,QAAQ;QAAK;QACxC,OAAO;QACP,aAAa;IACjB;AACJ;AAoBA,MAAM,qBAAqB,IAAI,qJAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC3C,MAAM;QACF,MAAM;QACN,MAAM;YAAC;YAAU;YAAQ;SAAU;QACnC,UAAU;IACd;IACA,OAAO;QACH,MAAM;QACN,KAAK;IACT;IACA,SAAS;QACL,MAAM;QACN,MAAM;YAAC;YAAY;SAAa;IACpC;AACJ,GAAG;IAAE,YAAY;AAAK;AAEtB,MAAM,gBAAgB,IAAI,qJAAA,CAAA,UAAQ,CAAC,MAAM,CAAW;IAChD,MAAM;QACF,MAAM;QACN,UAAU;IACd;IACA,aAAa;QACT,MAAM;QACN,UAAU;IACd;IACA,UAAU;QACN,MAAM;QACN,UAAU;IACd;IACA,UAAU;QAAC;KAAmB;AAClC,GAAG;IAAE,YAAY;AAAK,GAErB,UAAY,MAAM,CAAA,GAAA,mHAAA,CAAA,UAAS,AAAD;AAC3B,MAAM,UAA2B,qJAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,UAAU,GAAG,qJAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,UAAU,GAAG,qJAAA,CAAA,UAAQ,CAAC,KAAK,CAAW,WAAW;uCAEhH","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/components/ProductCard.tsx"],"sourcesContent":["import { IKImage } from \"imagekitio-next\";\nimport Link from \"next/link\";\nimport { Eye } from \"lucide-react\";\nimport { IMAGE_VARIANTS, IProduct } from \"@/models/product.model\";\n\nexport default function ProductCard({ product }: { product: IProduct }) {\n  const lowestPrice = product.variants.reduce(\n    (min, variant) => (variant.price < min ? variant.price : min),\n    product.variants[0]?.price || 0\n  );\n\n  return (\n    <div className=\"card bg-base-100 shadow hover:shadow-lg transition-all duration-300\">\n      <figure className=\"relative px-4 pt-4\">\n        <Link\n          href={`/products/${product._id}`}\n          className=\"relative group w-full\"\n        >\n          <div\n            className=\"rounded-xl overflow-hidden relative w-full\"\n            style={{\n              aspectRatio:\n                IMAGE_VARIANTS.SQUARE.dimensions.width /\n                IMAGE_VARIANTS.SQUARE.dimensions.height,\n            }}\n          >\n            <IKImage\n              path={product.imageUrl}\n              alt={product.name}\n              loading=\"eager\"\n              transformation={[\n                {\n                  height: IMAGE_VARIANTS.SQUARE.dimensions.height.toString(),\n                  width: IMAGE_VARIANTS.SQUARE.dimensions.width.toString(),\n                  cropMode: \"extract\",\n                  focus: \"center\",\n                  quality: 80,\n                },\n              ]}\n              className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-105 transition-transform duration-500\"\n            />\n          </div>\n          <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300 rounded-xl\" />\n        </Link>\n      </figure>\n\n      <div className=\"card-body p-4\">\n        <Link\n          href={`/products/${product._id}`}\n          className=\"hover:opacity-80 transition-opacity\"\n        >\n          <h2 className=\"card-title text-lg\">{product.name}</h2>\n        </Link>\n\n        <p className=\"text-sm text-base-content/70 line-clamp-2 min-h-[2.5rem]\">\n          {product.description}\n        </p>\n\n        <div className=\"card-actions justify-between items-center mt-2\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-lg font-bold\">\n              From ${lowestPrice.toFixed(2)}\n            </span>\n            <span className=\"text-xs text-base-content/50\">\n              {product.variants.length} sizes available\n            </span>\n          </div>\n\n          <Link\n            href={`/products/${product._id}`}\n            className=\"btn btn-primary btn-sm gap-2\"\n          >\n            <Eye className=\"w-4 h-4\" />\n            View Options\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS,YAAY,EAAE,OAAO,EAAyB;IACpE,MAAM,cAAc,QAAQ,QAAQ,CAAC,MAAM,CACzC,CAAC,KAAK,UAAa,QAAQ,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,KACzD,QAAQ,QAAQ,CAAC,EAAE,EAAE,SAAS;IAGhC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAM,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE;oBAChC,WAAU;;sCAEV,6LAAC;4BACC,WAAU;4BACV,OAAO;gCACL,aACE,oIAAA,CAAA,iBAAc,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GACtC,oIAAA,CAAA,iBAAc,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM;4BAC3C;sCAEA,cAAA,6LAAC,wKAAA,CAAA,UAAO;gCACN,MAAM,QAAQ,QAAQ;gCACtB,KAAK,QAAQ,IAAI;gCACjB,SAAQ;gCACR,gBAAgB;oCACd;wCACE,QAAQ,oIAAA,CAAA,iBAAc,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ;wCACxD,OAAO,oIAAA,CAAA,iBAAc,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;wCACtD,UAAU;wCACV,OAAO;wCACP,SAAS;oCACX;iCACD;gCACD,WAAU;;;;;;;;;;;sCAGd,6LAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;0BAInB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBACH,MAAM,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE;wBAChC,WAAU;kCAEV,cAAA,6LAAC;4BAAG,WAAU;sCAAsB,QAAQ,IAAI;;;;;;;;;;;kCAGlD,6LAAC;wBAAE,WAAU;kCACV,QAAQ,WAAW;;;;;;kCAGtB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;;4CAAoB;4CAC3B,YAAY,OAAO,CAAC;;;;;;;kDAE7B,6LAAC;wCAAK,WAAU;;4CACb,QAAQ,QAAQ,CAAC,MAAM;4CAAC;;;;;;;;;;;;;0CAI7B,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAM,CAAC,UAAU,EAAE,QAAQ,GAAG,EAAE;gCAChC,WAAU;;kDAEV,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;oCAAY;;;;;;;;;;;;;;;;;;;;;;;;;AAOvC;KA1EwB","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/components/ImageGallary.tsx"],"sourcesContent":["import { IProduct } from \"@/models/product.model\";\nimport ProductCard from \"./ProductCard\";\n\ninterface ImageGalleryProps {\n    products: IProduct[];\n}\n\nexport default function ImageGallery({ products }: ImageGalleryProps) {\n    return (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {products.map((product) => (\n                <ProductCard key={product._id?.toString()} product={product} />\n            ))}\n\n            {products.length === 0 && (\n                <div className=\"col-span-full text-center py-12\">\n                    <p className=\"text-base-content/70\">No products found</p>\n                </div>\n            )}\n        </div>\n    );\n}"],"names":[],"mappings":";;;;AACA;;;AAMe,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAChE,qBACI,6LAAC;QAAI,WAAU;;YACV,SAAS,GAAG,CAAC,CAAC,wBACX,6LAAC,oIAAA,CAAA,UAAW;oBAA+B,SAAS;mBAAlC,QAAQ,GAAG,EAAE;;;;;YAGlC,SAAS,MAAM,KAAK,mBACjB,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAE,WAAU;8BAAuB;;;;;;;;;;;;;;;;;AAKxD;KAdwB","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/lib/api-client.ts"],"sourcesContent":["import { IProduct } from \"@/models/product.model\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype FetchOptions = {\n    method?: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    body?: any;\n    headers?: Record<string, string>;\n}\n\nclass ApiClient {\n    private async fetch<T>(\n        endpoint: string,\n        options: FetchOptions = {}\n    ): Promise<T> {\n        const { method = \"GET\", body, headers = {} } = options;\n\n        const defaultHeaders = {\n            \"Content-Type\": \"application/json\",\n            ...headers\n        }\n \n        const response = await fetch(endpoint, {\n            method,\n            body: JSON.stringify(body),\n            headers: defaultHeaders\n        })\n        console.log(response)\n        if(!response.ok){\n            throw new Error(response.statusText)\n        }\n        return response.json();\n    }\n\n    async getProducts(){\n        return this.fetch<IProduct[]>(\"/api/products\")\n    }\n\n    async getProduct(id:string){\n        return this.fetch<IProduct>(\"/api/products/\"+id,{\n            method:\"POST\"\n        })\n    }\n}\n\nexport const apiClient = new ApiClient();"],"names":[],"mappings":";;;AASA,MAAM;IACF,MAAc,MACV,QAAgB,EAChB,UAAwB,CAAC,CAAC,EAChB;QACV,MAAM,EAAE,SAAS,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG;QAE/C,MAAM,iBAAiB;YACnB,gBAAgB;YAChB,GAAG,OAAO;QACd;QAEA,MAAM,WAAW,MAAM,MAAM,UAAU;YACnC;YACA,MAAM,KAAK,SAAS,CAAC;YACrB,SAAS;QACb;QACA,QAAQ,GAAG,CAAC;QACZ,IAAG,CAAC,SAAS,EAAE,EAAC;YACZ,MAAM,IAAI,MAAM,SAAS,UAAU;QACvC;QACA,OAAO,SAAS,IAAI;IACxB;IAEA,MAAM,cAAa;QACf,OAAO,IAAI,CAAC,KAAK,CAAa;IAClC;IAEA,MAAM,WAAW,EAAS,EAAC;QACvB,OAAO,IAAI,CAAC,KAAK,CAAW,mBAAiB,IAAG;YAC5C,QAAO;QACX;IACJ;AACJ;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///home/pandemicpanda30/Desktop/imagekit-wallpaper-store/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport ImageGallery from '@/components/ImageGallary'\nimport { apiClient } from '@/lib/api-client'\nimport { IProduct } from '@/models/product.model'\nimport { useEffect, useState } from 'react'\nimport { toast } from 'sonner'\n\nfunction Landing() {\n  const [products, setProducts] = useState<IProduct[]>([]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const data = await apiClient.getProducts();\n        console.log(data)\n        setProducts(data);\n      } catch (error) {\n        toast(error?.message as string)\n      }\n    }\n    fetchProducts();\n  },[])\n\n  return (\n    <div>\n      <ImageGallery products={products}/>\n    </div>\n  )\n}\n\nexport default Landing\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;;;AANA;;;;;AAQA,SAAS;;IACP,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAEvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM;mDAAgB;oBACpB,IAAI;wBACF,MAAM,OAAO,MAAM,8HAAA,CAAA,YAAS,CAAC,WAAW;wBACxC,QAAQ,GAAG,CAAC;wBACZ,YAAY;oBACd,EAAE,OAAO,OAAO;wBACd,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE,OAAO;oBACf;gBACF;;YACA;QACF;4BAAE,EAAE;IAEJ,qBACE,6LAAC;kBACC,cAAA,6LAAC,qIAAA,CAAA,UAAY;YAAC,UAAU;;;;;;;;;;;AAG9B;GArBS;KAAA;uCAuBM","debugId":null}}]
}